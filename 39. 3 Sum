#include <bits/stdc++.h> 
vector<vector<int>> findTriplets(vector<int>arr, int n, int K) {
	// Write your code here.
	//	optimal- O(n*log(n)+n*n)
	vector<vector<int>> ans;
	sort(arr.begin(),arr.end());
	for(int i=0;i<n;i++)
	{
		if(i>0&&arr[i]==arr[i-1]){
			continue;
		}
		int j=i+1,k=n-1;
		while(j<k)
		{
			if(arr[i]+arr[j]+arr[k]==K)
			{
				ans.push_back({arr[i],arr[j],arr[k]});
				j++;
				while(j<k&&arr[j]==arr[j-1])
				{
					j++;
				}
				k--;
				while(j<k&&arr[k]==arr[k+1])
				{
					k--;
				}
			}
			else if(arr[i]+arr[j]+arr[k]<K)
			{
				j++;
			}
			else
			{
				k--;
			}
		}
		
	}

	return ans;
}

//WITHOUT SORTING THE GIVEN ARRAY

/*set<vector<int>> st;
for(int i=0;i<n-2;i++)
{
	set<int> st2;
	int j=i+1;
	while(j<n)
	{
		int x=K-(arr[i]+arr[j]);
                if (st2.find(x) != st2.end()) {
                  vector<int> v;
                  v.push_back(arr[i]);
                  v.push_back(arr[j]);
                  v.push_back(x);
                  sort(v.begin(), v.end());
                  st.insert(v);
                }
                st2.insert(arr[j]);
        j++;
	}
		
}

vector<vector<int>> ans(st.begin(), st.end());
return ans;
}*/
