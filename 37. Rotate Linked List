/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     int n=0;
     Node *p=head;
     while(p)
     {
          n++;
          p=p->next;
     }

     Node *prev,*curr;
     curr=head;
     prev=NULL;
     int i=0;
     k=k%n;
     if(k==0)
     {
          return head;
     }
     while(i<n-k)
     {
         prev=curr;
         curr=curr->next;
         i++;
     }

     prev->next=NULL;
     Node *ans=curr;
     while(curr->next!=NULL)
     {
          curr=curr->next;
     }
     curr->next=head;
     return ans;
}
